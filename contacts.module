<?php

/**
 * @file
 * Main file of the module.
 */

// Load CRUD functions.
module_load_include('crud.inc', 'contacts');

/**
 * Implements hook_menu().
 */

function contacts_init() {
    $path = drupal_get_path('module', 'contacts');
    drupal_add_js($path . '/js/confirm.js');
}
function contacts_menu()
{

    $item ['address-book/delete/%'] = array(
        'description' =>t('delete contact'),
        'page callback' => 'contacts_delete_item',
        'page arguments' =>array(2),
        'access callback' => 'contacts_access',
        'access arguments' => array(2),

    );
    $item['address-book/contact/%'] = array(
        'description' => t('page contact'),
        'page callback' => 'contacts_page_view',
        'page arguments' => array(2),
        'access callback' => 'contacts_access',
        'access arguments' => array(2),
    );
    $items['ajax-call/%'] = array(

        'title' => 'Note AJAX',
        'page callback' => 'contacts_ajax',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'delivery callback' => 'ajax_deliver',
    );


    return $item;
}
/*
 * hook_menu_alter().
 */
function contacts_menu_alter(&$items){
    $items['address-book/add']['title']='add';
    $items['address-book/add']['type']= MENU_LOCAL_TASK;



    return $items;
}
/**
 * Implements hook_entity_info().
 */
function contacts_entity_info()
{
    return array(
        'contacts' => array(
            'label' => t('Contacts'),
            'base table' => 'contacts',
            'fieldable' => TRUE,
            'entity keys' => array(
                'id' => 'cid',
                'label' => 'title',

            ),
            'bundles' => array(
                'contacts' => array(
                    'label' => t('Contacts'),
                    'admin' => array(
                        'path' => 'admin/content/contact/structure',
                        'access arguments' => array('administer site configuration'),
                    ),
                ),
            ),

            // Entity API-related parameters.
            'controller class' => 'EntityAPIController',
            'entity class' => 'Entity',
            'admin ui' => array(
                'path' => 'address-book',
                'file' => 'contacts.admin.inc',
            ),
            'module' => 'contacts',
            'access callback' => 'contacts_access',
        ),
    );
}
/**
 * Implements hook_permission().
 */
function contacts_permission()
{
    return array(
        'access method' => array(
            'title' => t('contact module '),
            'description' => t('contact module'),
        ),
    );
}

/**
 * Access callback for Contact entities.
 */
function contacts_access()
{
    return user_access('access method');
}

/*
 * Page with view contacts
 */
function contacts_page_view($cid)
{
    drupal_add_library('system', 'drupal.ajax');
   $contacts = contacts_load($cid);
   $output = contacts_view($contacts);
   /*$output['contacts'][$cid]['field_note'][0]['#markup'] =
        '<div id="wrap-text">' . $output['contacts'][$cid]['field_note'][0]['#markup'] . '</div>';*/
   /*$output['contacts'][$cid]['show_more'] = array(
       '#type' => 'link',
       '#title' => t('read more'),
       '#href' => 'ajax-call/'.$cid,
       '#ajax' => array(
           'wrapper' => 'wrap-text',
           'method' => 'replace',
           'effect' => 'fade',
       ),


    );*/
    $output['readmore'] = array(
        '#type' => 'link',
        '#title' => t('Read More'),
        '#href' => 'ajax-call/'.$cid,
        '#ajax' => array(
            'wrapper' => 'ajax-content',
            'method' => 'replace',
            'effect' => 'fade',
        ),
    );

    drupal_set_breadcrumb(array(l(t('Home'), '<front>'), l(t('Address-book'), 'address-book'), ($contacts->first_name.' '.$contacts->last_name)));
    dsm($contacts);
   return $output;
}

function contacts_ajax($cid) {

    $contact = contacts_load((int)$cid);
    $contact_wrapped = entity_metadata_wrapper('contacts', $contact);

    return $contact_wrapped->field_note->value();

}


function contacts_views_bulk_operations_form_alter(&$form, &$form_state, $vbo)
{

    if ($form_state['step'] == 'views_form_views_form') {

        $form['actions']['action::views_bulk_operations_delete_item'] = $form['select']['action::views_bulk_operations_delete_item'];
        $form['select']['action::views_bulk_operations_delete_item']['#printed'] = TRUE;
        $form['actions']['submit']['#access'] = FALSE;
        $form['actions']['#access'] = TRUE;
    }

    if ($form_state['step'] == 'views_bulk_operations_config_form') {
        $form['parameter']['term']['settings']['term']['#type'] = 'select';
        $vocab = taxonomy_vocabulary_machine_name_load('category');
        $term = taxonomy_get_tree($vocab->vid);
        $select_term = array();
        foreach ($term as $item) {
            $key = $item->tid;
            $value = $item->name;
            $select_term[$key] = $value;
        }
        $form['parameter']['term']['settings']['term']['#options'] = $select_term;

    }
}

function contacts_entity_property_info_alter(&$info)
{

    $info['contacts']['properties']['user_id'] = array(
        'label' => 'User_id',
        'type' => 'user',
        'schema field' => 'user_id',
        'description' => t('Contacts "user_id" property.')
    );

}


function contacts_delete_item($cid) {

    contacts_delete($cid);
    drupal_goto('address-book');
}
